version: 2.1
orbs:
  aws-cli: circleci/aws-cli@2.0.6

references:
  workspace_root: &workspace_root
                    /tmp/workspace
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root
  persist_to_workspace: &persist_to_workspace
    persist_to_workspace:
      root: /tmp/workspace
      paths:
        - .

commands:
  terraform-init:
    description: "terraform init"
    parameters:
      dir:
        description: "Directory to run the command in"
        type: string
    steps:
      - run:
          name: Terraform Init
          command: |
            export ACCOUNT_ID=$(cat /tmp/workspace/vars/account_id)
            cd << parameters.dir >>
            terraform init -input=false -backend-config="bucket=${ACCOUNT_ID}-tfstate"
  terraform-apply:
    description: "terraform Apply"
    parameters:
      vars:
        description: "Terraform vars"
        type: string
        default: ""
      dir:
        description: "Directory to run the command in"
        type: string
    steps:
      - run:
          name: Terraform Apply
          command: |
            cd << parameters.dir >>
            if [ -z "<< parameters.vars >>" ]
            then
              terraform apply -auto-approve
            else
              terraform apply -auto-approve -var="<< parameters.vars >>"
            fi
  install-tar:
    steps:
      - run:
          name: Install tar utility
          command: |
            yum install -y tar gzip

jobs:
  get-aws-account:
    working_directory: *workspace_root
    docker:
      - image: amazon/aws-cli
    steps:
      - install-tar
      - run:
          command: mkdir ./vars
      - run:
          command: echo "$(aws sts get-caller-identity --query Account --output text)" > /tmp/workspace/vars/account_id
      - *persist_to_workspace
  ecs-cluster-terraform:
    working_directory: *workspace_root
    docker:
      - image: hashicorp/terraform:1.1.3
    steps:
      - *attach_workspace
      - checkout:
          path: ./src
      - terraform-init:
          dir: ./src/ecs-cluster/terraform
      - terraform-apply:
          dir: ./src/ecs-cluster/terraform
      - run:
          name: get terraform outputs
          command: |
            cd ./src/ecs-cluster/terraform
            terraform output image_repo_name > /tmp/workspace/vars/image_repo_name
            terraform output image_repo_url > /tmp/workspace/vars/image_repo_url
      - *persist_to_workspace
  build-push-docker-image:
    docker:
      - image: amazon/aws-cli
    steps:
      - install-tar
      - *attach_workspace
      - run:
          name: build and push docker image
          command: |
            export ACCOUNT_ID=$(cat /tmp/workspace/vars/account_id)
            export TAG=$(echo $CIRCLE_SHA1 | cut -c 1-7)
            export REPOSITORY=$(cat /tmp/workspace/vars/image_repo_name)
            ls
            cd src
            ls
            cd service
            ls
            ./src/service/push_image.sh "${ACCOUNT_ID}" "${AWS_DEFAULT_REGION}" "${REPOSITORY}" "${TAG}"
      - *persist_to_workspace
  ecs-service-terraform:
    docker:
      - image: hashicorp/terraform:1.1.3
    steps:
      - *attach_workspace
      - run:
          name: ECS-Service terraform init & apply
          command: |
      - terraform-init:
          dir: ./src/service/terraform
      - terraform-apply:
          dir: ./src/service/terraform
          vars: service_image_url=$(cat /tmp/workspace/vars/image_repo_url):$(echo $CIRCLE_SHA1 | cut -c 1-7)
workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - get-aws-account
      - ecs-cluster-terraform:
          requires:
            - get-aws-account
      - build-push-docker-image:
          requires:
            - ecs-cluster-terraform
      - ecs-service-terraform:
          requires:
            - build-push-docker-image